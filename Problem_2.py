# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
# Function for nth fibonacci number - Space Optimisataion
# Taking 1st two fibonacci numbers as 0 and 1

def fib(n):
    a, b = 1, 2
    while b<n:
        print(b),
        a, b = b, a+b

def fib2(n):
    result=[]
    a, b = 1, 2
    while b<n:
        result.append(b)
        a, b = b, a+b
    return result

total = 0
a = fib2(4000000)
for i in a:
    if i%2 == 0:
        total += i
print(total)
